html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video,
input {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
    display: block;
}
body {
    line-height: 1;
}
ol,
ul {
    list-style: none;
}
blockquote,
q {
    quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
    content: "";
    content: none;
}
table {
    border-collapse: collapse;
    border-spacing: 0;
}

/* start from here */

body {
    font-family: monospace;
    display: grid;
    grid-template-columns: 100vw;
    grid-template-rows: 100px 150px min-content;
    place-items: center;
    gap: 20px;
    background-image: linear-gradient(
        135deg,
        rgb(255, 171, 255),
        rgb(227, 198, 255),
        rgb(177, 216, 255),
        rgb(196, 255, 196)
    );
    opacity: 0.75;
    background-size: cover;
    background-attachment: fixed;
    height: 100vh;
}

h1 {
    font-size: 3rem;
    font-weight: bold;
    text-align: center;
    padding: 8px;
}

.player-info {
    display: flex;
    flex-wrap: wrap;
    font-size: 2rem;
    row-gap: 20px;
}

.player-1,
.player-2 {
    flex: 0 1 auto;
    display: grid;
    grid-template-columns: 200px 100px;
    grid-template-rows: min-content;
    column-gap: 15px;
    row-gap: 5px;
    place-items: center;
}

.player-1 > span,
.player-2 > span {
    align-self: center;
    justify-self: center;
    padding: 4px;
}

symbol {
    text-align: center;
    width: 100%;
}

.name {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    max-width: 200px;
    justify-self: left;
}

.tile-grid {
    display: grid;
    grid-template-columns: repeat(3, 150px);
    grid-template-rows: repeat(3, 150px);
}

.hovering {
    opacity: 0.5;
}

.grid-cell {
    border: 1px solid black;
    display: grid;
    font-size: 100px;
    place-items: center;
    cursor: pointer;
}

.cell-0 {
    border-top: none;
    border-left: none;
}

.cell-1 {
    border-top: none;
}

.cell-2 {
    border-top: none;
    border-right: none;
}

.cell-3 {
    border-left: none;
}

.cell-5 {
    border-right: none;
}

.cell-6 {
    border-bottom: none;
    border-left: none;
}

.cell-7 {
    border-bottom: none;
}

.cell-8 {
    border-bottom: none;
    border-right: none;
}

.your-turn {
    font-weight: bolder;
    position: relative;
}

.your-turn::after {
    content: "Your\Aturn!";
    white-space: pre;
    position: absolute;
    left: 25px;
    top: -15px;
    font-size: 0.8rem;
    transform: rotate(-45deg);
}

dialog {
    width: clamp(min-content, 50%, 800px);
    min-height: min-content;
    padding: 0;
    border-radius: 10px;
}

.input-form {
    display: flex;
    flex-direction: column;
    gap: 16px;
    font-size: 1.5rem;
}

.player-1-input-info,
.player-2-input-info {
    padding: 8px;
    box-shadow: 0px 8px 8px -8px #000000;
}

.player-1-input-info {
    background-color: rgb(239, 224, 255);
}

.player-2-input-info {
    background-color: rgb(225, 255, 221);
}

.input-info {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    place-items: center;
    row-gap: 8px;
    margin-bottom: 16px;
}

.input-info > label {
    font-weight: bolder;
    border-bottom: 1px solid black;
}

input[type="text"] {
    text-align: center;
    border: 2px solid black;
    padding: 4px;
}

fieldset {
    text-align: center;
}

fieldset > div {
    display: flex;
    justify-content: space-around;
    margin-top: 8px;
}

input[type="radio"] {
    display: none;
}

input[type="radio"] + label {
    font-size: 3.5rem;
    cursor: pointer;
    padding: 20px;
    border: 1px solid transparent;
    border-radius: 20px;
    margin: 0 5px;
    transition: background-color 0.3s;
}

input[type="radio"]:hover + label {
    background-color: rgb(240, 240, 240);
}

input[type="radio"]:checked + label {
    border-color: rgb(95, 95, 255);
}

.play-button-div {
    display: flex;
    justify-content: center;
    padding: 8px;
    padding-bottom: 24px;
}

::backdrop {
    background-image: linear-gradient(
        45deg,
        magenta,
        rebeccapurple,
        dodgerblue,
        green
    );
    opacity: 0.75;
}

#play-game {
    font-family: monospace;
    font-size: 2rem;
    padding: 8px 40px;
    background-color: rgb(191, 150, 230);
    opacity: 0.75;
    color: rgb(0, 0, 0);
    font-weight: bolder;
    border: 2px solid black;
    cursor: pointer;
    transition: background-color 0.3s;
}

#play-game:hover {
    background-color: rgb(160, 213, 235);
}

#play-game:active {
    border: 2px inset rgb(0, 255, 13);
}

#dialog-play-again {
    background-color: rgb(160, 213, 235);
}

#dialog-play-again h2.result {
    margin-bottom: 20px;
    text-align: center;
    font-size: 3rem;
    font-weight: bolder;
    color: black;
    padding: 16px;
}

#dialog-play-again form div {
    margin-bottom: 15px;
    display: flex;
    justify-content: center;
}

#play-again,
#reset {
    font-family: monospace;
    font-size: 1.5rem;
    padding: 10px 20px;
    background-color: rgb(191, 150, 230); /* Matches primary button color */
    opacity: 0.75;
    color: rgb(0, 0, 0);
    font-weight: bolder;
    border: 2px solid black;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.1s;
    border-radius: 5px;
    margin: 0 5px;
}

#play-again:hover,
#reset:hover {
    background-color: rgb(184, 255, 213); /* Hover color */
}

#play-again:active,
#reset:active {
    transform: scale(0.98);
    border: 2px inset rgb(0, 255, 13);
}

#reset {
    background-color: rgb(225, 128, 128); /* Red background for reset */
}

#reset:hover {
    background-color: rgb(255, 99, 99); /* Darker red on hover */
}

#reset:active {
    transform: scale(0.98);
    border: 2px inset rgb(255, 1, 1);
}
